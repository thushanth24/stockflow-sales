-- Create sales_restorations table to track restored sales
DO $$
BEGIN
    -- Create the table if it doesn't exist
    CREATE TABLE IF NOT EXISTS public.sales_restorations (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        sale_id UUID NOT NULL,
        product_id UUID NOT NULL,
        quantity_restored INTEGER NOT NULL,
        restored_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
        restored_by UUID NOT NULL,
        original_quantity INTEGER NOT NULL,
        sale_date DATE NOT NULL,
        
        CONSTRAINT fk_sale
          FOREIGN KEY (sale_id) 
          REFERENCES sales(id) 
          ON DELETE CASCADE,
          
        CONSTRAINT fk_product
          FOREIGN KEY (product_id)
          REFERENCES products(id)
          ON DELETE CASCADE,
          
        CONSTRAINT fk_user
          FOREIGN KEY (restored_by)
          REFERENCES auth.users(id)
          ON DELETE SET NULL
    );

    -- Enable RLS if not already enabled
    IF NOT EXISTS (
        SELECT 1 
        FROM pg_tables 
        WHERE tablename = 'sales_restorations' 
        AND rowsecurity = true
    ) THEN
        ALTER TABLE public.sales_restorations ENABLE ROW LEVEL SECURITY;
    END IF;

    -- Drop existing policies if they exist
    DROP POLICY IF EXISTS "Enable read access for authenticated users" ON public.sales_restorations;
    DROP POLICY IF EXISTS "Enable insert for admins and staff" ON public.sales_restorations;

    -- Create read access policy
    CREATE POLICY "Enable read access for authenticated users" 
    ON public.sales_restorations
    AS PERMISSIVE FOR SELECT
    TO authenticated
    USING (true);

    -- Create insert policy
    CREATE POLICY "Enable insert for admins and staff" 
    ON public.sales_restorations
    AS PERMISSIVE FOR INSERT
    TO authenticated
    WITH CHECK (true);

    -- Create indexes if they don't exist
    CREATE INDEX IF NOT EXISTS idx_sales_restorations_sale_id ON public.sales_restorations(sale_id);
    CREATE INDEX IF NOT EXISTS idx_sales_restorations_product_id ON public.sales_restorations(product_id);
    CREATE INDEX IF NOT EXISTS idx_sales_restorations_restored_at ON public.sales_restorations(restored_at);
    CREATE INDEX IF NOT EXISTS idx_sales_restorations_sale_date ON public.sales_restorations(sale_date);

EXCEPTION WHEN OTHERS THEN
    RAISE NOTICE 'Error in migration: %', SQLERRM;
    RAISE;
END $$;
