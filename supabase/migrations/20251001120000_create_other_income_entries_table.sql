-- Create other income entries table
create table if not exists public.other_income_entries (
  id bigint generated by default as identity primary key,
  income_date date not null,
  label text not null,
  amount numeric(12, 2) not null check (amount >= 0),
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
  user_id uuid references auth.users(id) not null
);

-- Helpful index for filtering by date
create index if not exists other_income_entries_income_date_idx
  on public.other_income_entries (income_date desc);

-- Enable Row Level Security
alter table public.other_income_entries enable row level security;

-- Policies to restrict data access to record owners
create policy "Users can view their other income entries"
  on public.other_income_entries for select
  using (auth.uid() = user_id);

create policy "Users can insert their other income entries"
  on public.other_income_entries for insert
  with check (auth.uid() = user_id);

create policy "Users can update their other income entries"
  on public.other_income_entries for update
  using (auth.uid() = user_id);

create policy "Users can delete their other income entries"
  on public.other_income_entries for delete
  using (auth.uid() = user_id);

-- Trigger to keep updated_at current
create trigger update_other_income_entries_updated_at
  before update on public.other_income_entries
  for each row
  execute function update_updated_at_column();


